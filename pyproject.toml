[build-system]
build-backend = "pdm.backend"
requires = ["pdm-backend"]

[project]
authors = [{ email = "julian.lf.olate@gmail.com", name = "olatejulian" }]
dependencies = []
description = "A monorepo designed for learning and practicing Python programming"
license = { text = "MIT" }
name = "self-study-python"
readme = "README.md"
requires-python = ">=3.12,<3.13"
version = "0.0.0"

[tool.mypy]
disable_error_code = "import-untyped"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "-e file:///${PROJECT_ROOT}/apps/api-example",
    "-e file:///${PROJECT_ROOT}/apps/automaton",
    "-e file:///${PROJECT_ROOT}/apps/code-generator",
    "-e file:///${PROJECT_ROOT}/apps/ltx",
    "-e file:///${PROJECT_ROOT}/apps/storage",
    "-e file:///${PROJECT_ROOT}/apps/url-shortner",
    "-e file:///${PROJECT_ROOT}/modules/chronos",
    "-e file:///${PROJECT_ROOT}/modules/cqrs",
    "-e file:///${PROJECT_ROOT}/modules/decorar",
    "-e file:///${PROJECT_ROOT}/modules/fs",
    "-e file:///${PROJECT_ROOT}/modules/rpc",
    "-e file:///${PROJECT_ROOT}/modules/seedwork",
    "-e file:///${PROJECT_ROOT}/modules/tools",
    "mypy>=1.11.1",
    "ruff>=0.5.6",
    "toml-sort>=0.23.1",
]

[tool.pdm.scripts]
automaton = { shell = "cd apps/automaton;pdm {args}; cd ../../", help = "Run PDM inside automaton app." }

ltx = { help = "Run PDM inside ltx app.", shell = "cd apps/ltx;pdm {args}; cd ../../" }

decorar = { help = "Run PDM inside decorar module.", shell = "cd modules/decorar;pdm {args}; cd ../../" }

[tool.ruff]
line-length = 79

[tool.ruff.lint]
extend-select = ["E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]

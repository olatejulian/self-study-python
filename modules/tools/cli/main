#!/home/olatejulian/.anaconda/bin/python
'''
https://realpython.com/command-line-interfaces-python-argparse/
'''
import os 
import sys
import argparse

class VerboseStore(argparse.Action):
    def __init__(self, option_strings, dest, nargs=None, **kwargs):
        if nargs is not None:
            raise ValueError('nargs not allowed')
        super(VerboseStore, self).__init__(option_strings, dest, **kwargs)

    def __call__(self, parser, namespace, values, option_string=None):
        print('Here I am, setting the ' \
              'values %r for the %r option...' % (values, option_string))
        setattr(namespace, self.dest, values)

if __name__ == '__main__':
    parser_information = {
        'prog': 'Python CLI Study',
        'usage': '%(prog)s [options] path, Hello Word',
        'description': 'List the content of a folder',
        'epilog': 'A new world came to you, the door is open. Enjoy it!',
        'prefix_chars': '-'
    }

    arguments = [
        {
            'args': ['Path'],
            'kwargs': {
                'metavar': 'path',
                'type': str,
                'help': 'the path of to list'
            } 
        },
        {
            'args': ['-l', '--long'],
            'kwargs':  {
                'action': 'store_true',
                'help': 'enable the long listing format'
            }
        },
        {
            'args': ['-v', '--version'],
            'kwargs': {
                'action': 'version'
            }
        },
        {
            'args': ['-i', '--input'],
            'kwargs': {
                'action': VerboseStore,
                'type': int
            }
        }
    ]

    parser = argparse.ArgumentParser(**parser_information)

    for argument in arguments:
        parser.add_argument(
            *argument['args'], 
            **argument['kwargs']
        )

    args = parser.parse_args()

    # BUSINESS RULES

    input_path = args.Path

    if not os.path.isdir(input_path):
        print('Hello word, this not a directory')
        sys.exit()

    for line in os.listdir(input_path):
        if args.long:  # Simplified long listing
            size = os.stat(os.path.join(input_path, line)).st_size
            line = '%10d  %s' % (size, line)
        print(line)
